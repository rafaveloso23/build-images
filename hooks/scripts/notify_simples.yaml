---
- name: "Configurar UMA notification (simples) - pre-plan"
  hosts: localhost
  gather_facts: false

  vars:
    api_base: "https://app.terraform.io/api/v2"

    # Lidas do ambiente (exportadas pelo pre-plan-simples)
    hcp_org: "{{ lookup('env','HCP_ORG') }}"
    hcp_token: "{{ lookup('env','HCP_TF_TOKEN') }}"
    ws_name: "{{ lookup('env','TFC_WORKSPACE_NAME') }}"

    notify_name: "{{ lookup('env','NOTIFY_NAME') | default('Webhook server test', true) }}"
    notify_destination_type: "{{ lookup('env','NOTIFY_DESTINATION_TYPE') | default('generic', true) }}"
    notify_url: "{{ lookup('env','NOTIFY_URL') | default('https://httpstat.us/200', true) }}"
    notify_triggers_raw: "{{ lookup('env','NOTIFY_TRIGGERS') | default('run:created,run:errored,run:needs_attention,run:planning', true) }}"

    # Atributo enabled do payload (independe da flag de execução)
    notify_enabled_str: "{{ lookup('env','NOTIFY_ENABLED') | default('false', true) }}"

  tasks:
    - name: "Normalizar enabled e triggers"
      set_fact:
        notify_enabled: "{{ (notify_enabled_str | lower) in ['1','true','yes','on'] }}"
        notify_triggers: "{{ notify_triggers_raw.split(',') | map('trim') | list }}"

    - name: "Checar URL quando o destino exige URL (generic/slack/teams)"
      assert:
        that:
          - notify_destination_type in ['email'] or (notify_url | length) > 0
        fail_msg: "NOTIFY_URL é obrigatório para destination-type {{ notify_destination_type }}"

    - name: "Obter workspace (org + nome)"
      uri:
        url: "{{ api_base }}/organizations/{{ hcp_org }}/workspaces/{{ ws_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ hcp_token }}"
          Content-Type: "application/vnd.api+json"
        return_content: true
        status_code: [200]
      register: ws_resp

    - name: "workspace_id"
      set_fact:
        workspace_id: "{{ ws_resp.json.data.id }}"

    - name: "Listar notifications do workspace"
      uri:
        url: "{{ api_base }}/workspaces/{{ workspace_id }}/notification-configurations"
        method: GET
        headers:
          Authorization: "Bearer {{ hcp_token }}"
          Content-Type: "application/vnd.api+json"
        return_content: true
        status_code: [200]
      register: list_resp

    - name: "Filtrar existentes pelo mesmo NOME"
      set_fact:
        existing_by_name: >-
          {{
            (list_resp.json.data | default([]))
            | selectattr('attributes.name','equalto', notify_name)
            | list
          }}

    - name: "Criar notification (só se NÃO existir com esse nome)"
      uri:
        url: "{{ api_base }}/workspaces/{{ workspace_id }}/notification-configurations"
        method: POST
        headers:
          Authorization: "Bearer {{ hcp_token }}"
          Content-Type: "application/vnd.api+json"
          Accept: "application/vnd.api+json"
        body_format: json
        body:
          data:
            type: "notification-configuration"
            attributes:
              destination-type: "{{ notify_destination_type }}"
              name: "{{ notify_name }}"
              url: "{{ notify_url if notify_destination_type != 'email' else omit }}"
              triggers: "{{ notify_triggers }}"
              # booleano real; NÃO string
              enabled: false
        return_content: true
        status_code: [200, 201, 400, 409, 422, 500]
      register: create_resp
      failed_when: false
      when: (existing_by_name | length) == 0

    - name: "Definir notification_id (novo ou existente)"
      set_fact:
        notification_id: >-
          {{
            (create_resp.json.data.id
              if ((existing_by_name | length) == 0 and (create_resp.status | default(0)) in [200,201])
              else (existing_by_name[0].id if (existing_by_name | length) > 0 else 'unknown'))
          }}

    - name: "Resumo"
      debug:
        msg:
          - "workspace_id={{ workspace_id }}"
          - "name={{ notify_name }}"
          - "already_existed={{ (existing_by_name | length) > 0 }}"
          - "post_status={{ create_resp.status | default('skipped') }}"
          - "notification_id={{ notification_id }}"
          - "errors={{ create_resp.json.errors | default([]) }}"
    # ===== NOVO: PATCH opcional p/ ajustar 'enabled' após create ou quando já existe =====
    - name: "PATCH: ajustar 'enabled' conforme variável (se tivermos ID)"
      when: notification_id not in ['unknown', '']
      uri:
        url: "{{ api_base }}/notification-configurations/{{ notification_id }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ hcp_token }}"
          Content-Type: "application/vnd.api+json"
          Accept: "application/vnd.api+json"
        body_format: json
        body:
          data:
            id: "{{ notification_id }}"
            type: "notification-configurations"   # PLURAL no PATCH
            attributes:
              enabled: true
        return_content: true
        status_code: [200]
      register: patch_resp
      failed_when: false

    - name: "Resumo"
      debug:
        msg:
          - "workspace_id={{ workspace_id }}"
          - "name={{ notify_name }}"
          - "already_existed={{ (existing_by_name | length) > 0 }}"
          - "post_status={{ create_resp.status | default('skipped') }}"
          - "notification_id={{ notification_id }}"
          - "patch_status={{ patch_resp.status | default('skipped') }}"
          - "errors_post={{ create_resp.json.errors | default([]) }}"
          - "errors_patch={{ patch_resp.json.errors | default([]) }}"