---
- name: "Configurar notifications (dinâmico por matriz) - pre-plan"
  hosts: localhost
  gather_facts: false

  vars:
    api_base: "https://app.terraform.io/api/v2"

    # Ambientes
    hcp_org: "{{ lookup('env','HCP_ORG') }}"
    hcp_token: "{{ lookup('env','HCP_TF_TOKEN') }}"
    ws_name: "{{ lookup('env','TFC_WORKSPACE_NAME') }}"
    workspace_notification_enabled: "{{ (lookup('env','WORKSPACE_NOTIFICATION_ENABLED') or 'false') | bool }}"

    # Matriz de notifications (JSON em uma linha) - obrigatória quando enabled=true
    notify_configs_json: "{{ lookup('env','NOTIFY_CONFIGS_JSON') | default('[]', true) }}"
    default_triggers: ["run:created","run:completed","run:errored"]

  tasks:
    - name: "Encerrar cedo se a flag não estiver habilitada"
      meta: end_play
      when: not workspace_notification_enabled

    - name: "Parse da matriz JSON"
      set_fact:
        notify_matrix: "{{ notify_configs_json | from_json }}"

    # Unicidade por PAR (name, destination_type) dentro da matriz
    - name: "Validar matriz (não-vazia, chaves únicas por name+destination_type)"
      assert:
        that:
          - notify_matrix is iterable
          - notify_matrix | length > 0
          - >
            (
              notify_matrix
              | map('combine', {'destination_type':'generic'}, true)
              | map('extract', {'k': ''})
              | list
            ) is not defined
        fail_msg: "Validação falhou."
      vars:
        # cria uma lista de chaves 'name|destination_type' normalizada
        keys: >-
          {{
            notify_matrix
            | map('combine', {'destination_type':'generic'}, true)
            | map('regex_replace', '^$', '')  # no-op p/ evitar bug de filtro vazio
          }}
      # Nota: a checagem acima é placeholder; vamos fazer a checagem de unicidade explicitamente abaixo.

    # Checagem explícita de unicidade (name|destination_type)
    - name: "Checar unicidade (name + destination_type)"
      vars:
        keys: >-
          {{
            notify_matrix
            | map('combine', {'destination_type':'generic'}, true)
            | map('community.general.json_query', '{k: join(`|`, [name, destination_type])}')
            | map(attribute='k') | list
          }}
      assert:
        that:
          - keys | length == (keys | unique | length)
        fail_msg: "NOTIFY_CONFIGS_JSON inválido: cada par (name, destination_type) deve ser único."

    - name: "Normalizar entradas (defaults)"
      set_fact:
        notify_matrix_norm: >-
          {{
            notify_matrix
            | map('combine', {'destination_type':'generic'}, True)
            | map('combine', {'triggers': default_trigg_
